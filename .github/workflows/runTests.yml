name: Tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    name: PHP ${{ matrix.php-versions }} on ${{ matrix.os }} w/ ${{ matrix.dependencies }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.php-versions == '8.4' }}
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2', '8.3', '8.4']
        os: [ubuntu-latest, windows-latest, macOS-latest]
        dependencies: ['install', 'update --prefer-lowest', 'update']

    steps:
    - name: Configure git
      if: runner.os == 'Windows'
      run: git config --system core.autocrlf false; git config --system core.eol lf

    - name: Checkout
      uses: actions/checkout@v4.1.1

    - name: Set up PHP ${{ matrix.php-versions }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring
        coverage: xdebug

    - name: Setup Problem Matchers for PHP
      run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

    - name: Setup Problem Matchers for PHPUnit
      run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

    - name: Validate composer.json and composer.lock
      run: composer validate

    - name: Get Composer Cache Directory
      if: runner.os != 'Windows'
      id: composer-cache
      run: echo "value=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      if: runner.os != 'Windows'
      uses: actions/cache@v4.0.1
      with:
        path: ${{ steps.composer-cache.outputs.value }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install dependencies
      run: composer ${{ matrix.dependencies }} --prefer-dist --no-progress --no-suggest

    - name: Run test suite
      run: composer run-script test -- --coverage-text
